@using SocialNetworkingApp.Data
@model SocialNetworkingApp.ViewModels.ProjectViewModel

@section Scripts {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Подключение Bootstrap JS (jQuery также должен быть подключен перед ним) -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        function toggleChangeForm() {
            const form = document.getElementById('changeForm');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        function toggleAnnouncementForm() {
            const form = document.getElementById('announcementForm');
            form.removeAttribute('hidden');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }
    </script>

    <script src="/js/likepost.js"></script>
    <script src="/js/deletepost.js"></script>
    <script src="/js/editpost.js"></script>
    <script src="/js/imagepreview.js"></script>
    <script src="/js/loadprojectposts.js"></script>
    <script src="/js/chooseexistingimage.js"></script>

    <script>
        function submitForm(formId, url, listId) {
            const $form = $('#' + formId);
            const formData = new FormData($form[0]);

            const description = $form.find('textarea[name="description"]').val().trim();
            if (!description) {
                alert('Описание не может быть пустым');
                return; 
            }

            $.ajax({
                url: url,
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    const $list = $('#' + listId);
                    $list.append(response);
                    if (formId == 'changeFormElement') {
                        toggleChangeForm();
                    }
                    else {
                        toggleAnnouncementForm();
                    }
                    $form[0].reset();
                    
                },
                error: function (xhr, status, error) {
                    console.error('Ошибка при отправке формы:', error);
                }
            });
        }
    </script>


}

<div class="container">
    @if (Model.IsCurrentUserMember)
    {
        <div class="col-md-8 text-end">
            <a asp-controller="Project" asp-action="Edit" asp-route-id="@Model.Project.Id" class="btn btn-warning">Редактировать проект</a>
        </div>
    }

    <h2 class="col-md-8">@Model.Project.Type.Type: @Model.Project.Title</h2>

    <!-- Информация о проекте -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5>@Model.Project.Type.Type:</h5>
                </div>
                <div class="card-body">
                    <p><strong>Цель:</strong> @Model.Project.Goal</p>
                    <p><strong>Описание:</strong> @Model.Project.Description</p>
                    <p><strong>Статус:</strong> @Model.Project.ProjectStatus.Status</p>
                    <a asp-controller="Album" asp-action="Index" asp-route-projectId="@Model.Project.Id" class="btn btn-primary mt-2">Перейти к альбомам</a>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Участники и история изменений (сворачиваемые details) -->
    <details class="mb-4">
        <summary class="btn btn-secondary">Участники проекта</summary>
        <div class="col-md-8">
            <div class="card mt-3">
                <div class="card-body">
                    <ul>
                        @foreach (ProjectFollower member in Model.Members)
                        {
                            <li>@member.User.FirstName @member.User.LastName - @member.Role</li>
                        }
                    </ul>
                    @if (Model.IsCurrentUserMember)
                    {
                        <a asp-controller="Project" asp-action="EditMember" asp-route-id="@Model.Project.Id" class="btn btn-outline-secondary mt-3">Редактировать участников</a>
                    }
                </div>
            </div>
        </div>
        
    </details>

    <details class="mb-4">
        <summary class="btn btn-secondary">История изменений</summary>
        <div class="col-md-8">
            <div class="card mt-3">
                <div class="card-body">
                    <ul id="changeList">
                        @foreach (ProjectChange change in Model.Changes)
                        {
                            <li id="change-@change.Id"><strong>@change.ChangeDate.ToString("dd.MM.yyyy HH:mm")</strong> @change.ChangeDescription</li>
                        }
                    </ul>
                    @if (Model.IsCurrentUserMember)
                    {
                        <button class="btn btn-outline-secondary mt-3" onclick="toggleChangeForm()">Создать изменение</button>
                        <div id="changeForm" style="display: none;" class="mt-3">
                            <form id="changeFormElement" onsubmit="event.preventDefault(); submitForm('changeFormElement', '/Project/AddChange', 'changeList');">
                                <input name="projectId" value="@Model.Project.Id" hidden />
                                <div class="form-group mt-2">
                                    <textarea class="form-control" name="description" rows="3" placeholder="Описание"></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary mt-2">Сохранить</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </details>

    <!-- Вкладка объявлений -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5>Объявления</h5>
                </div>
                <div class="card-body" style="max-height: 200px; overflow-y: auto;">
                    <ul id="announcementList">
                        @foreach (ProjectAnnouncement announcement in Model.Announcements)
                        {
                            <li><strong> @announcement.CreatedAt.ToString("dd.MM.yyyy HH:mm") @announcement.Title:</strong> @announcement.Description</li>
                        }
                    </ul>
                    @if (Model.IsCurrentUserMember)
                    {
                        <button class="btn btn-outline-secondary mt-3" onclick="toggleAnnouncementForm()">Создать объявление</button>
                        <div id="announcementForm" style="display: none;" class="mt-3">
                            <form id="announcementFormElement" onsubmit="event.preventDefault(); submitForm('announcementFormElement', '/Project/AddAnnouncement', 'announcementList');">
                                <input name="projectId" value="@Model.Project.Id" hidden />
                                <div class="form-group">
                                    <input type="text" class="form-control" name="title" maxlength="20" placeholder="Заголовок">
                                </div>
                                <div class="form-group mt-2">
                                    <textarea class="form-control" name="description" rows="3" placeholder="Описание"></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary mt-2">Сохранить</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    @if (Model.IsCurrentUserMember)
    {
        <div class="row">
            @await Html.PartialAsync("_CreatePostPartial", new SocialNetworkingApp.ViewModels.CreatePostViewModel { From = "Project", PostTypeId = (int)PostTypeEnum.Project, ProjectId = Model.Project.Id })
        </div>
        <br />
    }

    <div id="postsContainer" class="row">
        @await Html.PartialAsync("_FeedPartial", new SocialNetworkingApp.ViewModels.FeedViewModel { CurrentUserId = Model.CurrentUserId, Posts = Model.Posts, ProjectId = Model.Project.Id, ProjectTitle = Model.Project.Title })
    </div>

    <div class="modal fade" id="editWarningModal" tabindex="-1" role="dialog" aria-labelledby="editWarningModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editWarningModalLabel">Предупреждение</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Нельзя перейти к редактированию поста, пока другой пост находится в режиме редактирования.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .container h2 {
        text-align: center;
        font-size: 1.8rem;
    }

    .card {
        margin-bottom: 20px;
    }

    .card-header {
        background-color: #f8f9fa;
    }

    textarea {
        resize: none;
    }

    ul {
        padding-left: 20px;
    }
</style>

