@using SocialNetworkingApp.Data
@model SocialNetworkingApp.ViewModels.CommunityViewModel

@section Scripts {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Подключение Bootstrap JS (jQuery также должен быть подключен перед ним) -->
    <!-- Подключение Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

    <!-- Подключение Bootstrap-select CSS и JS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/js/bootstrap-select.min.js"></script>

    <script>
        function toggleChangeForm() {
            const form = document.getElementById('changeForm');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        function toggleAnnouncementForm() {
            const form = document.getElementById('announcementForm');
            form.removeAttribute('hidden');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }
    </script>

    <script src="/js/likepost.js"></script>
    <script src="/js/deletepost.js"></script>
    <script src="/js/editpost.js"></script>
    <script src="/js/imagepreview.js"></script>
    <script src="/js/loadcommunityposts.js"></script>
    <script src="/js/chooseexistingimage.js"></script>

    <script>
        function submitForm(formId, url, listId) {
            const $form = $('#' + formId);
            const formData = new FormData($form[0]);

            const description = $form.find('textarea[name="description"]').val().trim();
            if (!description) {
                alert('Описание не может быть пустым');
                return;
            }

            $.ajax({
                url: url,
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    const $list = $('#' + listId);
                    $list.append(response);
                    if (formId == 'changeFormElement') {
                        toggleChangeForm();
                    }
                    else {
                        toggleAnnouncementForm();
                    }
                    $form[0].reset();

                },
                error: function (xhr, status, error) {
                    console.error('Ошибка при отправке формы:', error);
                }
            });
        }
    </script>


    <script>
        // Функция для показа/скрытия формы добавления участника
        function toggleAddAdminForm() {
            const form = document.getElementById('addAdminForm');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        function submitAddAdminForm(url, listId) {
            const form = $('#addAdminFormElement');
            const formData = new FormData(form[0]);

            // Проверяем, что выбрали студента и ввели роль
            if (!formData.get('studentData')) {
                alert('Пожалуйста, выберите студента.');
                return;
            }

            // Отправляем данные формы через AJAX
            $.ajax({
                url: url,
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    const adminList = $('#' + listId);
                    adminList.append(response);
                    form[0].reset();
                },
                error: function () {
                    alert('Такого человека нет или он уже является администратором сообщества.');
                }
            });
        }

        // Функция для обновления списка участников
        function updateAdminList(newAdminHtml, listId) {
            const adminList = $('#' + listId);
            adminList.append(newAdminHtml);
        }

        // Делегируем событие удаления
        $('#adminList').on('click', '.deleteAdmin-btn', function () {
            const adminId = $(this).data('adminid');

            $.ajax({
                url: '/Community/DeleteAdmin',
                type: 'POST',
                data: { adminId: adminId },
                success: function () {
                    $(`[data-adminId=${adminId}]`).remove();
                },
                error: function () {
                    alert('Ошибка при удалении администратора.');
                }
            });
        });

    </script>
}

<div class="container">

    @if (Model.IsOwner)
    {
        <div class="col-md-8 text-end">
            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editCommunityModal">Редактировать</button>
        </div>
        @if (TempData["Error"] != null)
        {
            <div class="col-md-12 alert alert-danger">
                <span><b>Извините!</b> - @TempData["Error"]</span>
            </div>
        }

        <!-- Модальное окно для редактирования сообщества -->
        <div class="modal fade" id="editCommunityModal" tabindex="-1" aria-labelledby="editCommunityModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editCommunityModalLabel">Редактировать сообщество</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editCommunityForm" method="post" asp-controller="Community" asp-action="Edit">
                            <input type="hidden" name="communityId" value="@Model.Community.Id" />
                            <div class="mb-3">
                                <label for="title" class="form-label">Название сообщества</label>
                                <textarea required class="form-control" name="title">@Model.Community.Title</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="description" class="form-label">Описание</label>
                                <textarea required class="form-control" name="description">@Model.Community.Description</textarea>
                            </div>

                            <div class="mb-3">
                                <label for="Type" class="form-label">Тип сообщества</label>
                                <select id="CommunityType" class="form-select" name="typeId">
                                    @foreach (var type in Model.Types)
                                    {
                                        @if (type.Value == Model.Community.TypeId.ToString())
                                        {
                                            <option value="@type.Value" selected>
                                                @type.Text
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@type.Value">
                                                @type.Text
                                            </option>
                                        }
                                    }
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                        <button type="submit" class="btn btn-primary" form="editCommunityForm">Сохранить изменения</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <h2 class="col-md-8">@Model.Community.Title</h2>

    <!-- Информация о сообществе -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <p><strong>Тип:</strong> @Model.Community.CommunityType.Type</p>
                    <p><strong>Описание:</strong> @Model.Community.Description</p>
                    <div>
                        <strong>Подписчики: </strong><span id="subscriberCount" class="me-2">
                            @Model.MemberCount
                        </span>
                        @if (!Model.IsOwner && !Model.IsAdmin)
                        {
                            @if (Model.IsCurrentUserMember)
                            {
                                <form asp-controller="Community" asp-action="Unsubscribe" method="post" class="mt-2">
                                    <input type="hidden" name="communityId" value="@Model.Community.Id" />
                                    <button type="submit" class="btn btn-primary">Отписаться</button>
                                </form>
                            }
                            else
                            {
                                <form asp-controller="Community" asp-action="Subscribe" method="post" class="mt-2">
                                    <input type="hidden" name="communityId" value="@Model.Community.Id" />
                                    <button type="submit" class="btn btn-primary">Подписаться</button>
                                </form>
                            }

                        }
                    </div>
                    <a asp-controller="Album" asp-action="Index" asp-route-communityId="@Model.Community.Id" class="btn btn-primary mt-2">Перейти к альбомам</a>
                </div>
            </div>
        </div>
    </div>

    <details class="mb-4">
        <summary class="btn btn-secondary">Администраторы</summary>
        <div class="col-md-8">
            <div class="card mt-3">
                <div class="card-body">
                    <!-- Список администраторов -->
                    <ul id="adminList" class="list-group">
                        @foreach (CommunityMember admin in Model.Admins)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center" data-adminId="@admin.Id">
                                <div>
                                    <span><a class="profile-link" asp-controller="Profile" asp-action="Index" asp-route-userId="@admin.UserId">@admin.User.FirstName @admin.User.LastName</a></span>
                                    <span class="badge badge-primary">@(admin.UserId == Model.Community.OwnerId ? "Создатель" : "Администратор")</span>
                                </div>
                                @if (Model.IsOwner && Model.CurrentUserId != admin.UserId)
                                {
                                    <div>
                                        <button class="btn btn-light btn-sm deleteAdmin-btn" data-adminId="@admin.Id">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </div>
                                }
                            </li>
                        }
                    </ul>

                    @if (Model.IsOwner)
                    {
                        <button type="button" class="btn btn-outline-secondary mt-3" onclick="toggleAddAdminForm()">Добавить администратора</button>

                        <!-- Форма добавления участника -->
                        <div id="addAdminForm" style="display: none;" class="mt-3">
                            <form id="addAdminFormElement" onsubmit="event.preventDefault(); submitAddAdminForm('@Url.Action("AddAdmin", "Community")', 'adminList');">
                                <input name="communityId" value="@Model.Community.Id" hidden />

                                <div class="form-group mt-2">
                                    <label for="studentData">Выберите студента</label>
                                    <select id="studentData" name="studentData" class="form-control selectpicker" data-live-search="true">
                                        <option value="">Выберите студента</option>
                                        @foreach (var student in Model.Users)
                                        {
                                            <option value="@student.Value">@student.Text</option>
                                        }
                                    </select>
                                </div>

                                <button type="submit" class="btn btn-primary mt-2">Добавить</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </details>
</div>

<div class="container">
    @if (Model.IsCurrentUserMember)
    {
        <div class="row">
            @await Html.PartialAsync("_CreatePostPartial", new SocialNetworkingApp.ViewModels.CreatePostViewModel { From = "Community", PostTypeId = (int)PostTypeEnum.Community, CommunityId = Model.Community.Id })
        </div>
        <br />
    }

    <div id="postsContainer" class="row">
        @await Html.PartialAsync("_FeedPartial", new SocialNetworkingApp.ViewModels.FeedViewModel { CurrentUserId = Model.CurrentUserId, Posts = Model.Posts, CommunityId = Model.Community.Id, CommunityTitle = Model.Community.Title, IsCommunityAdmin = Model.IsAdmin ? true : false })
    </div>

    <div class="modal fade" id="editWarningModal" tabindex="-1" role="dialog" aria-labelledby="editWarningModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editWarningModalLabel">Предупреждение</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Нельзя перейти к редактированию поста, пока другой пост находится в режиме редактирования.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .container h2 {
        text-align: center;
        font-size: 1.8rem;
    }

    .card {
        margin-bottom: 20px;
    }

    .card-header {
        background-color: #f8f9fa;
    }

    textarea {
        resize: none;
    }

    ul {
        padding-left: 20px;
    }
</style>
